const CoGateway = artifacts.require('EIP20CoGateway');
const MockAnchor = artifacts.require('MockAnchor');
const BN = require('bn.js');
const rlp = require('rlp');

contract('prove outbox()', (accounts) => {
  let cogateway;

  function _serializeProof(proof) {
    const serializedProof = [];
    proof.forEach(p => serializedProof.push(rlp.decode(p)));
    return `0x${rlp.encode(serializedProof).toString('hex')}`;
  }

  function encodedAccountValue(accountProof) {
    const decodedProof = rlp.decode(accountProof);
    const leafElement = decodedProof[decodedProof.length - 1];
    return `0x${leafElement[leafElement.length - 1].toString('hex')}`;
  }

  function proofFormater() {
    const rlpParentNodes = '0xf90cd3f90211a03272c37d795318e6932b9eab4fb4d4216998df1cf847b5c3dcb8e7b4d4049851a0d932422c8db2b24d706b5a44174a85fbaa3dffe6a551992d958ccd279529abf9a0723d4ec40e8e1880ccde4d94b30cd2c95a5da09813d1748f654c70dd6022d54aa07ca65a7471fa1c93c701ae57fc6aee0068983283978894ccc317601b783e3c94a03556a0c0900ea2998925f3665cf430cdab68b64c0122a5deb56d9c058c704220a0a417bf19f66f23f25a2f27a15bffd7c47dd844b63472b2d9d0802984b4e6e583a007de35262321a5e24aaed5dfb6aa26f9027945814dad8d3bb81cfb3bdd6811fba008cc8fbe11255fb55f723ea0b13460907f5957491f4c9393f59ee8362e26cd47a039d1c78c4adb52e1232d05ab40c991abb2b38d6c541ec428dc38d7eee26ee697a0c07cb619a32f5634a22af469224e6090ab387198c7e24cb00bb9819e37d8ef06a058db7cc712419e6c9035e891fc52b9d7ff45d39348d426811e1e34c4db3f94f9a08aba2fd440050369d3086f15cd353a83cd01e2dfd6afa9e57867c122561860eba05e4bec716aa1dba346bb7e457728b288991ece32d92d5af2c7e68e874908ea6ba0775148c85dbca6cdb721ba9575daff225fa967aa1627294b48fcef3473a61651a0b737df2b554f33d37a8e522651c88312ac349ca846116e24c9120c2436bf9775a09c3ffe6fd979c1c7760989d2033c0560df9f2e0623945cc02818a603db7295cc80f90211a0f0c658f07a95f91c7dddccf21de4d9a79433557cb36f64dcf063b4124dd3cdb2a023c165448dacbcd5e1f9b784fe3cf37b12025b2f9ed6db224a82e4dfc19e685ba03716f6d91105014a07010c7f7bf5777a2d5cb9176fb302a4d400d04c6470634fa082e1dad719d90389faf4ad53ad9ec84217ee9728e74feb7a79000e4162520084a028f63791f5eaa3be4a72d6a11cb916d6913aebc2f0b6deee5c48102cc1747d16a032f2806f831da29fc0427e08b4fa029a569324c2ca7972751966a2f8d1701044a0b7237049ddd2e2b242614c73582c6c5906f6a2631f543701049cdcb39d473ac4a032e5a063d6f15ddbc91f172b8f7a8f19d36acc513a18bcfc4557486818bb16f8a00d7774c6630d3eeac857aff11fbf564700ffe6df7e3d959a6b86485e78f2f8d6a0605f7472d881cfe5872b266ecd4da74590d27f0b7379ea3bbb5f9662428ae7ada089b1c5fcc13aca25b501b4a413141497e4e3521fe7b57e9b006d4e0ad3894947a092a1c6145cb9c0ed68abb16251cdcb25691a5db7e0ed70003850e8a21e218d3da069cbc2b1a5ecab09e7456b62195a7fad2a298e570e9b4453a2fc615327a6ee26a01822fdbb0b7386e6a2df5da70aced1ea06183be3b7803c63b6a056dfe923ed81a0883b9a123fa7b247fff3d20522d61f32a2bb770211c708d98da32b554109d6d1a0563ff09a8a8cc3a044194f1d078df9d10e1e1d9b3e91c311e2620a845fceae1480f90211a0c6c3a2b70598afd1f3cca015ec10fe935baa80c080599dac9487be3e036de543a09dddaf8c1568c42b40687881dc2c033702f3c0ca891aecba864dbdfde15a9913a03c46e94b1685a6267f8cb0251b89a91f8a837e0315ea9f22a29993c28f2ae1aca088a5fce093a968c86b194bfbfea820b9233d6b86ae6860b296661142c6633176a04b81977cb7de628a1a60eff04bd5b2c08dd4c9f0fcc1b4fb7abacb467163eff1a0f879667e63fa19b9417224193e504ef424c3bc81989708b86d375077c1620566a01a80a1b130ea9841406399932ac07eb3667d6d9d17ec90f92180cbe93cb72b17a02ea37fe00647c0ca7d6fdf8f8edb2cac5f2ed902260fded97f69849172c79a54a033a9a9466ad5f5bd0ac6abe841d7d522330a76c034ab7846eda3e8fc26545fe8a064477a02af6cc4670749f9209b1efc81277659e4366e91392abf50b72d906ba8a0ddbc00bd52dbd9b27e3bead4aebbc96e4836f9f0de410739b8672a3b43000c09a07b17035c32a12647ce1f4cf1f3f3c2667c76f45795f63f1994990b2f71bcb60ca09297fcbf8a0085b4e7a1a94238b530477bc8786d66d0d21fbb0f863765619cb7a0bd2531d7eadc0eb8116a68f412def6b22df42f4cb1e86815e68b4aa5b1ca10f5a001762411c73b107811776c39145e7ff77835a959add5ced31ab89e2c89976f09a05dbc66eac12274a846e26e5b74f8fe8913fca1bde572142b416a2d806682912e80f90211a0972432e47bd950cf45f7fd44f01d24d859579f872204c6cbd1703a26a279ad9ba048c208e55a217c03b2aadafa19d7318c7dfc3febdbfa51a80513cea9645aa22ba041cd59d5f51147507cff06277467a5f1592ed28e0ab876433fa4806ff5276ed9a0b8f613137cadf2cfba254b6ed5f535be0a67dd2e76ddb56db0f892e19a8371daa066b56e839341bc90944cdc6c59048898d03cde6e3a49a06fe4cfeff45c59fa99a0cc8bbc7835f254a25f5ed42123566883626de106bb8c4fdf82f32db229da5889a0cf25a09011ed441f59900b2b5cd00616692a91a3167c63a59fb5799ae90ee108a0bfaa054d3fe63329ee9526888fc23f26d40e0d8f5b695e1304654c8984726106a09d2be7c8057d8373997889fe56727b79a22a6467cd6bd02993ce51ddca31bc87a0053d590431d5b22ea4cb0d35cba39ae777571c65994ddce234320613f38ba309a09a26369af51ed227b9bc1362763bbe0510c07d972658be90726fa3b2785400faa0cd45674c1323f8d34b38e9bb42fdc75ec9dbf1675a4fdd9bee174e36e814faafa06fe62011432ae6e2dffcafbe17578311873105c1953071274aa277ac285bd1bea0a5ef1674acf1c23beccf18152b807f61e92202a1636eb053913b7c94fb7c621ba04488c41096309c5f6cc21e7e8263947afdfe164ae4bc3a6727bc559590550739a08cbd2a03619816f6ceb1f9697866d884443fcc8e04ed08b9594c27402180844d80f90211a04a26d10c17bcb2e1ac19c965f2498e2aa9311059588044b66c1e761a7bf54f9ca03dd943b97e1c33651a401fed2c0de852b6f3e414ca828de599d25f2288cfc21da0ed591ae69c8acdeefd918c8590ac54bee44a3e7ac11d5930ee86c122483d936ba034defe9c6ad1d60570ab1c891301148c163d897264b8561208c25ddcefeace81a0d4680e02e75cbbd227380bd40c388ed8cbee22a0130852c069f440e9428d47d9a024b0af0c243c88e4fa6055c8aa16ebb9f2ac44749622762614c430e614e6c3c5a0d5be5c7b34693973130f87d377872194e102d14f4721287019ea8150a0f4c21da041de473a529ca0ab9f23c0e7971c71bea65c6c7783c5ff925350aaa69f8f0b08a0ca9a0818b9a5c407a1a955e4a45ed5fd0a50576497ee3c84da648bf1c2d46b57a042b0f80b8ae50f63d30fc195ffc8cb49835b50501149ef796bd264d246978acaa0715b5db0b912ad88b781eeba03c3e2b982e8ca3bf1b498a4474b659761f22b0da097dba41ed4c4272ecffe19e96b9d742f307b53996c60cd8a2e3f14f11f5cb937a0b39041e3cef901058b10c64e7486e2e8f242cf722e84f0b7febdbec634867d8da0b6d4bfb2189ac462c68a9dd1d7697baf67317d8907e2ec367bdfaa9dee92fb65a0a6fe749bfc3b52a9f1cd92b03145b00a6f0450930e7eb4174a54c4642090e64ba00c767713d49ff7c52044ccd06bc940747ebc106f3a9543d95b9182cda906cf5d80f90191a022f1509415f637dd26507ab7e2b381ac757b4050a50a7a81062e3a31504d4bbaa016d0af002f4dd023d862c7083d9458112c484a688e9a7bbffc5e76dbddac1bcda041f11bf02402045500927d6b7ffb2f94b734038d953ddd57514b8abe05d18cf4a00abb39439f806c0bcc130cf7c5375064d5476da9e9095df965a4b34338c5a8eea0ca0deebf770b5539a0411b96226b39913dc3e57f044fa0c8c0dc3777511d4833a0f711f7d51099ffaebe9a3cb55950599b358e33bb7a0bad685ba37916bc5b82c1a0c766644590d35a38537f49572982b04c2e25b161f5f74d0f68f66d0c02cf9f4da03256c00638793d3ec84628f497d45ac4bb1ef984d1a2d504e2ecdbbd2fa8dbfca0896787a7c792e687dc48a1d795b815b3dce3e2923a9f484e2f4afda0d536e9b580a0bbc9a9b750771d9ea55c513883fef0d9364ff67a53c59379b30834ca2d3f80b480a061b1eb7edcd8e59f674e356c0b47dbfaec352015d0838445fa0f7879f20805888080a0d901aa0a9ff64ad1daa5f443224400b94941a3e5f2f301ed71414175e327559080f8718080a04295880a6285f39dd7559cf426340ed8617684904b6404516d34c0a7e37d63468080808080a01adbc8e86e6d8a909986fd235a07ada752aa4950e0453b942e5fdfecb08eadb38080808080a084877ac839a7a24cd9ade3034de684e3008bbe9617e19ccea3ccb4b35dc734aa8080f8669d36a135fc5938d51da2c14d4b4366a129f8d28c887ffe3502135f02e98eb846f8440280a0f0912a1d8b0ec9c0ffbd9a67c41c41218141f9312a43b98d42fdff9f9318a0e2a0a87139431e2dd1f326a53ff39927de7067363bb25bc443fb4a19e3df233f50a7';
    const rlpAccount = encodedAccountValue(rlpParentNodes);
    return { rlpAccount, rlpParentNodes };
  }

  it('prove gateway should work', async () => {
    const gatewayAddress = web3.utils.toChecksumAddress('0xe06a2803dca74fffa8710973c922e70f83581031');
    const blockHeight = 5049111;
    const stateRoot = '0x1157367a3d0487c60445173515522c6ab0dc69c55c6386c92fd4124a6c428f76';
    const proofData = proofFormater();
    const { rlpAccount } = proofData;
    const { rlpParentNodes } = proofData;

    console.log('old rlp account  ', rlpAccount);
    console.log('old parent nodes  ', rlpParentNodes);

    console.log('rlp parent nodes ', rlpParentNodes);
    console.log('encoded account', rlpAccount);
    console.log('gateway address ', gatewayAddress);

    console.log('sha3 encoded account  ', web3.utils.sha3(rlpAccount));
    console.log('state root  ', stateRoot);
    const mockAnchor = await MockAnchor.new(
      1,
      blockHeight,
      stateRoot,
      10,
      accounts[0],
    );

    cogateway = await CoGateway.new(
      accounts[0],
      accounts[1],
      mockAnchor.address,
      new BN(0),
      accounts[2],
      gatewayAddress,
      accounts[4],
    );
    const encodedPath = await cogateway.encodedGatewayPath.call();

    console.log('encodedPath  ', encodedPath);
    console.log('expected encodedPath  ', web3.utils.sha3(gatewayAddress));

    const tx = await cogateway.proveGateway(
      blockHeight,
      rlpAccount,
      rlpParentNodes,
    );

    console.log('tx  ', tx);
  });

  it('should prove outbox storage', async () => {
    const storageProof = ['0xf9019180a0320ce86e317f7e61e7890a6671338aa79374e5ec3206fc38496b5b3719788fc4a07642cb37fbbc28c4c2e8367a93bb491013223d266543c0e42db6a580cc274beea0ad8732b76b5befaa3c523633abdafb8b410b8e1140526255c839a7225e2b2f3ea060b926526a0a95873151f96f0c4aa7746dd1cc51242b4893d43554acd2716cda80a03e819a317d72fa7445677a4104b74899547b424aec05ae303b605f7d78aa9dc4a0c9980a15de3258be2f1dcf5d0657c256f7e7aebe83b736aada89aa02dee3853ea0747f61b4309342612ee827a5930678c61bd54a2c85e207144c265912351d46f4a070256c377a27b7c7cdf605559f21f20f54d147abce914c3b1ac36815fd8f2b8080a0b7a25a664618fb58b0754dd3c9665402787704d11169240bccf8e7c34feb0167a0e78c6966deeb91437d0c2cbf66bde64fd4dbb76d22a9885679a3cf9e5fd84394a02a74dc63db6f6f5f79d6cadbb2b348771d3bcd1913f9319cfa0c5fea4353db47a0e53cc96cd3fe0910d63b48800ac824d7f0e094548d259d6342da2189ca3c0e238080', '0xe210a0094e521c10bbb9291d38d4aebd6c6722a4763451011f97f24709b28611831699', '0xf8518080808080a0460b29d4cbb31e3680769b8ece024e6e35e9c9c3d9c7c207873e93b8c43cff1980a0fe9627f9a9fb3323465824fc6fdfd87f907332a17f6ed39bfdcd94c76b548eee808080808080808080', '0xe19f369c9cc6db1aff35e37923897950227d2a87c95ef0101b2a0233740f2ce00d01'];

    const params = {
      _staker: '0xf4b4e5f4c41a6247894f4b15391dbad3c5d19eee',
      _stakerNonce: '2',
      _beneficiary: '0xbd90a53eefd2795cae20b0912623466d3669b6d9',
      _amount: '10000000000000000000000',
      _gasPrice: 0,
      _gasLimit: '0',
      _hashLock: '0x6562a7de2178ff19c27e724db01172695a52addaabc11224204759e6442a6953',
      _blockHeight: '5049111',
      _rlpParentNodes: '0xf9020cf90171a05d75023b42a320356169a535352448227aad73b1b884a4f3cbf75aec8399e451a0a68beb9bb60c3542e0e79bfb93ccfb18a84b97f6e1deb133c5ddcb577aec0289a0af4694d88ff60f5048603085d4eef4862697652115560f18182ae927b3bbe01b80a058563817668d198a2fac4613f38a695ec0afd385295ec64e0c7be7909e672852a080dd89a242f8ba180df9e32fe155fcc903636e6969ef528c118f6f9fc3fff0dd80a0186657dbed585fc9c8c6c9eb22fec05d5f020f49f2f815b480530ec34126aa79a0a4ad033ba45782ba4f41e2829820550a38e2fc97439d9fcfeb94a879c23e219f8080a0a4b1cad573b6d300d001b84fc21b3abc301160cb0f07e481123a927a8483ff6da07b2bb2a0db48ba5e08fab3dad59ab1ec59950a0a02959cbf5dfcab09379bc707a071902aa1d226bb4e5187dc1e6fd2be9c16388c5acea8074dc798ace960445925a02cef2457e726924bf6b5ae4b5edc8cc47445ecc3eb68bace0e53996d1e5018658080e215a00e43ff48208da7a6b63be3a9b0966e0ddb9e8f3240c6eb114deeebdefd923974f851a0e8de87b73f756e7dc16f2bcb4c7fbf3ec8276b4da2d9d9fba4c7aec798676278808080808080808080808080a03d715e3f784c608167a224cc99731b38bb0fccc86df28e0f2744fe3ac317eec7808080e19f31f431c2d6ca07553a2a1c7994580de926e9472539029ce8d0650805c5de3c01',
    };

    console.log('params  proof  ', params._rlpParentNodes);
    const tx = await cogateway.confirmStakeIntent(
      params._staker,
      params._stakerNonce,
      params._beneficiary,
      params._amount,
      params._gasPrice,
      params._gasLimit,
      params._hashLock,
      params._blockHeight,
      params._rlpParentNodes,
    );

    console.log('tx  ', JSON.stringify(tx));
  });
});
